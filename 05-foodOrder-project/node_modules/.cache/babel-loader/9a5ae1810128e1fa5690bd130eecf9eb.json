{"ast":null,"code":"var _jsxFileName = \"D:\\\\proiecte\\\\react-udemy\\\\Folder nou\\\\05-foodOrder-project\\\\src\\\\Components\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Card } from \"../UI/Card\";\nimport classes from \"./AvailableMeals.module.css\";\nimport { MealItem } from \"./Meal Item/MealItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    const fetchMeals = async () => {\n      try {\n        const res = await fetch(\"https://bd-project-12ea0-default-rtdb.europe-west1.firebasedatabase.app/meals.json\");\n\n        if (!res.ok) {\n          throw new Error(\"Something went wrong\");\n        }\n\n        const data = await res.json();\n        const loadedMeals = [];\n\n        for (const key in data) {\n          loadedMeals.push({\n            id: key,\n            name: data[key].name,\n            description: data[key].description,\n            price: data[key].price\n          });\n        }\n\n        setMeals(loadedMeals);\n        setIsLoading(false);\n      } catch (error) {\n        setError(error);\n      }\n    };\n\n    fetchMeals();\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.mealsIsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: meals.map(meal => {\n          return /*#__PURE__*/_jsxDEV(MealItem, {\n            id: meal.id,\n            name: meal.name,\n            description: meal.description,\n            price: meal.price\n          }, meal.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"frrsaj0QsVZRzsWdV1MAEqACYb0=\");\n\n_c = AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["D:/proiecte/react-udemy/Folder nou/05-foodOrder-project/src/Components/Meals/AvailableMeals.js"],"names":["useEffect","useState","Card","classes","MealItem","AvailableMeals","meals","setMeals","isLoading","setIsLoading","error","setError","fetchMeals","res","fetch","ok","Error","data","json","loadedMeals","key","push","id","name","description","price","mealsIsLoading","map","meal"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,IAAT,QAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,SAASC,QAAT,QAAyB,sBAAzB;;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAClC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,UAAU,GAAG,YAAY;AAC7B,UAAI;AACF,cAAMC,GAAG,GAAG,MAAMC,KAAK,CACrB,oFADqB,CAAvB;;AAGA,YAAI,CAACD,GAAG,CAACE,EAAT,EAAa;AACX,gBAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACD;;AACD,cAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAnB;AACA,cAAMC,WAAW,GAAG,EAApB;;AACA,aAAK,MAAMC,GAAX,IAAkBH,IAAlB,EAAwB;AACtBE,UAAAA,WAAW,CAACE,IAAZ,CAAiB;AACfC,YAAAA,EAAE,EAAEF,GADW;AAEfG,YAAAA,IAAI,EAAEN,IAAI,CAACG,GAAD,CAAJ,CAAUG,IAFD;AAGfC,YAAAA,WAAW,EAAEP,IAAI,CAACG,GAAD,CAAJ,CAAUI,WAHR;AAIfC,YAAAA,KAAK,EAAER,IAAI,CAACG,GAAD,CAAJ,CAAUK;AAJF,WAAjB;AAMD;;AACDlB,QAAAA,QAAQ,CAACY,WAAD,CAAR;AACAV,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAnBD,CAmBE,OAAOC,KAAP,EAAc;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;AACF,KAvBD;;AAwBAE,IAAAA,UAAU;AACX,GA1BQ,EA0BN,EA1BM,CAAT;;AA2BA,MAAIJ,SAAJ,EAAe;AACb,wBACE;AAAS,MAAA,SAAS,EAAEL,OAAO,CAACuB,cAA5B;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AACD,sBACE;AAAS,IAAA,SAAS,EAAEvB,OAAO,CAACG,KAA5B;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBACGA,KAAK,CAACqB,GAAN,CAAWC,IAAD,IAAU;AACnB,8BACE,QAAC,QAAD;AACE,YAAA,EAAE,EAAEA,IAAI,CAACN,EADX;AAGE,YAAA,IAAI,EAAEM,IAAI,CAACL,IAHb;AAIE,YAAA,WAAW,EAAEK,IAAI,CAACJ,WAJpB;AAKE,YAAA,KAAK,EAAEI,IAAI,CAACH;AALd,aAEOG,IAAI,CAACN,EAFZ;AAAA;AAAA;AAAA;AAAA,kBADF;AASD,SAVA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAzDM;;GAAMjB,c;;KAAAA,c","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Card } from \"../UI/Card\";\r\nimport classes from \"./AvailableMeals.module.css\";\r\nimport { MealItem } from \"./Meal Item/MealItem\";\r\n\r\nexport const AvailableMeals = () => {\r\n  const [meals, setMeals] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  useEffect(() => {\r\n    const fetchMeals = async () => {\r\n      try {\r\n        const res = await fetch(\r\n          \"https://bd-project-12ea0-default-rtdb.europe-west1.firebasedatabase.app/meals.json\"\r\n        );\r\n        if (!res.ok) {\r\n          throw new Error(\"Something went wrong\");\r\n        }\r\n        const data = await res.json();\r\n        const loadedMeals = [];\r\n        for (const key in data) {\r\n          loadedMeals.push({\r\n            id: key,\r\n            name: data[key].name,\r\n            description: data[key].description,\r\n            price: data[key].price,\r\n          });\r\n        }\r\n        setMeals(loadedMeals);\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        setError(error);\r\n      }\r\n    };\r\n    fetchMeals();\r\n  }, []);\r\n  if (isLoading) {\r\n    return (\r\n      <section className={classes.mealsIsLoading}>\r\n        <p>Loading...</p>\r\n      </section>\r\n    );\r\n  }\r\n  return (\r\n    <section className={classes.meals}>\r\n      <Card>\r\n        <ul>\r\n          {meals.map((meal) => {\r\n            return (\r\n              <MealItem\r\n                id={meal.id}\r\n                key={meal.id}\r\n                name={meal.name}\r\n                description={meal.description}\r\n                price={meal.price}\r\n              />\r\n            );\r\n          })}\r\n        </ul>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}