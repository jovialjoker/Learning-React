{"ast":null,"code":"var _jsxFileName = \"D:\\\\proiecte\\\\react-udemy\\\\Folder nou\\\\07-customHooks\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Tasks from \"./components/Tasks/Tasks\";\nimport NewTask from \"./components/NewTask/NewTask\";\nimport useFetch from \"./Hooks/use-fetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n\n  const transformTaskes = tasksObj => {\n    const loadedTaskes = [];\n\n    for (const taskKey in tasksObj) {\n      loadedTaskes.push({\n        id: taskKey,\n        text: tasksObj[taskKey].text\n      });\n    }\n\n    setTasks(loadedTaskes);\n  };\n\n  useFetch({\n    url: \"https://bd-project-12ea0-default-rtdb.europe-west1.firebasedatabase.app/tasks.json\"\n  }, transformTaskes);\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const taskAddHandler = task => {\n    setTasks(prevTasks => prevTasks.concat(task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewTask, {\n      onAddTask: taskAddHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      items: tasks,\n      loading: isLoading,\n      error: error,\n      onFetch: fetchTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"C/2wWZJGq0HrfRiP8LyXbSMsSC4=\", false, function () {\n  return [useFetch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/proiecte/react-udemy/Folder nou/07-customHooks/src/App.js"],"names":["React","useEffect","useState","Tasks","NewTask","useFetch","App","tasks","setTasks","transformTaskes","tasksObj","loadedTaskes","taskKey","push","id","text","url","fetchTasks","taskAddHandler","task","prevTasks","concat","isLoading","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,QAAP,MAAqB,mBAArB;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMO,eAAe,GAAIC,QAAD,IAAc;AACpC,UAAMC,YAAY,GAAG,EAArB;;AACA,SAAK,MAAMC,OAAX,IAAsBF,QAAtB,EAAgC;AAC9BC,MAAAA,YAAY,CAACE,IAAb,CAAkB;AAAEC,QAAAA,EAAE,EAAEF,OAAN;AAAeG,QAAAA,IAAI,EAAEL,QAAQ,CAACE,OAAD,CAAR,CAAkBG;AAAvC,OAAlB;AACD;;AACDP,IAAAA,QAAQ,CAACG,YAAD,CAAR;AACD,GAND;;AAOAN,EAAAA,QAAQ,CACN;AACEW,IAAAA,GAAG,EAAE;AADP,GADM,EAINP,eAJM,CAAR;AAOAR,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,cAAc,GAAIC,IAAD,IAAU;AAC/BX,IAAAA,QAAQ,CAAEY,SAAD,IAAeA,SAAS,CAACC,MAAV,CAAiBF,IAAjB,CAAhB,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,SAAS,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AACE,MAAA,KAAK,EAAEX,KADT;AAEE,MAAA,OAAO,EAAEe,SAFX;AAGE,MAAA,KAAK,EAAEC,KAHT;AAIE,MAAA,OAAO,EAAEN;AAJX;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAnCQX,G;UASPD,Q;;;KATOC,G;AAqCT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport Tasks from \"./components/Tasks/Tasks\";\nimport NewTask from \"./components/NewTask/NewTask\";\nimport useFetch from \"./Hooks/use-fetch\";\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const transformTaskes = (tasksObj) => {\n    const loadedTaskes = [];\n    for (const taskKey in tasksObj) {\n      loadedTaskes.push({ id: taskKey, text: tasksObj[taskKey].text });\n    }\n    setTasks(loadedTaskes);\n  };\n  useFetch(\n    {\n      url: \"https://bd-project-12ea0-default-rtdb.europe-west1.firebasedatabase.app/tasks.json\",\n    },\n    transformTaskes\n  );\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const taskAddHandler = (task) => {\n    setTasks((prevTasks) => prevTasks.concat(task));\n  };\n\n  return (\n    <React.Fragment>\n      <NewTask onAddTask={taskAddHandler} />\n      <Tasks\n        items={tasks}\n        loading={isLoading}\n        error={error}\n        onFetch={fetchTasks}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}