{"ast":null,"code":"var _jsxFileName = \"D:\\\\proiecte\\\\react-udemy\\\\Folder nou\\\\07-customHooks\\\\src\\\\components\\\\NewTask\\\\NewTask.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport useFetch from \"../../Hooks/use-fetch\";\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTask = props => {\n  _s();\n\n  const [isLoading, error, sendRequest] = useFetch({\n    url: \"https://bd-project-12ea0-default-rtdb.europe-west1.firebasedatabase.app/tasks.json\",\n    method: \"POST\",\n    body: {\n      text: taskText\n    },\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n\n  const createTask = () => {\n    const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n\n    const createdTask = {\n      id: generatedId,\n      text: taskText\n    };\n    props.onAddTask(createdTask);\n  };\n\n  const enterTaskHandler = async taskText => {\n    sendRequest();\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(\"https://bd-project-12ea0-default-rtdb.europe-west1.firebasedatabase.app/tasks.json\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          text: taskText\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n\n    setIsLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTask, \"Y+wsjtcYYndVysPnQv42StuGjJM=\", false, function () {\n  return [useFetch];\n});\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"sources":["D:/proiecte/react-udemy/Folder nou/07-customHooks/src/components/NewTask/NewTask.js"],"names":["useState","useFetch","Section","TaskForm","NewTask","props","isLoading","error","sendRequest","url","method","body","text","taskText","headers","createTask","generatedId","data","name","createdTask","id","onAddTask","enterTaskHandler","setIsLoading","setError","response","fetch","JSON","stringify","ok","Error","json","err","message"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,SAAD,EAAYC,KAAZ,EAAmBC,WAAnB,IAAkCP,QAAQ,CAAC;AAC/CQ,IAAAA,GAAG,EAAE,oFAD0C;AAE/CC,IAAAA,MAAM,EAAE,MAFuC;AAG/CC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAI,EAAEC;AAAR,KAHyC;AAI/CC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAJsC,GAAD,CAAhD;;AASA,QAAMC,UAAU,GAAG,MAAM;AACvB,UAAMC,WAAW,GAAGC,IAAI,CAACC,IAAzB,CADuB,CACQ;;AAC/B,UAAMC,WAAW,GAAG;AAAEC,MAAAA,EAAE,EAAEJ,WAAN;AAAmBJ,MAAAA,IAAI,EAAEC;AAAzB,KAApB;AAEAR,IAAAA,KAAK,CAACgB,SAAN,CAAgBF,WAAhB;AACD,GALD;;AAMA,QAAMG,gBAAgB,GAAG,MAAOT,QAAP,IAAoB;AAC3CL,IAAAA,WAAW;AACXe,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAC,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,oFAD0B,EAE1B;AACEhB,QAAAA,MAAM,EAAE,MADV;AAEEC,QAAAA,IAAI,EAAEgB,IAAI,CAACC,SAAL,CAAe;AAAEhB,UAAAA,IAAI,EAAEC;AAAR,SAAf,CAFR;AAGEC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAHX,OAF0B,CAA5B;;AAWA,UAAI,CAACW,QAAQ,CAACI,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAED,YAAMb,IAAI,GAAG,MAAMQ,QAAQ,CAACM,IAAT,EAAnB;AACD,KAjBD,CAiBE,OAAOC,GAAP,EAAY;AACZR,MAAAA,QAAQ,CAACQ,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;AACD;;AACDV,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAzBD;;AA2BA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,WAAW,EAAED,gBAAvB;AAAyC,MAAA,OAAO,EAAEhB;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,KAAK,iBAAI;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAjDD;;GAAMH,O;UACoCH,Q;;;KADpCG,O;AAmDN,eAAeA,OAAf","sourcesContent":["import { useState } from \"react\";\nimport useFetch from \"../../Hooks/use-fetch\";\n\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\n\nconst NewTask = (props) => {\n  const [isLoading, error, sendRequest] = useFetch({\n    url: \"https://bd-project-12ea0-default-rtdb.europe-west1.firebasedatabase.app/tasks.json\",\n    method: \"POST\",\n    body: { text: taskText },\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\n  const createTask = () => {\n    const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n    const createdTask = { id: generatedId, text: taskText };\n\n    props.onAddTask(createdTask);\n  };\n  const enterTaskHandler = async (taskText) => {\n    sendRequest();\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        \"https://bd-project-12ea0-default-rtdb.europe-west1.firebasedatabase.app/tasks.json\",\n        {\n          method: \"POST\",\n          body: JSON.stringify({ text: taskText }),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}