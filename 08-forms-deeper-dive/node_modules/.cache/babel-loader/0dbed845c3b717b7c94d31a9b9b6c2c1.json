{"ast":null,"code":"var _jsxFileName = \"D:\\\\proiecte\\\\react-udemy\\\\Folder nou\\\\08-forms-deeper-dive\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [nameWasTouched, setNameWasTouched] = useState(false);\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [emailWasTouched, setEmailWasTouched] = useState(false);\n  const nameIsValid = enteredName.trim() !== \"\";\n  const emailIsValid = enteredEmail.trim() !== \"\";\n  const nameInputIsInvalid = !nameIsValid && nameWasTouched;\n  const emailInputIsInvalid = !emailIsValid && emailWasTouched;\n  let formIsValid = false;\n\n  if (nameIsValid) {\n    formIsValid = true;\n  }\n\n  const nameInputChangeHandler = e => {\n    setEnteredName(e.target.value);\n  };\n\n  const nameInputBlurHandler = e => {\n    setNameWasTouched(true);\n  };\n\n  const formSubmit = e => {\n    e.preventDefault();\n    setNameWasTouched(true);\n\n    if (!nameIsValid) {\n      return;\n    }\n\n    setEnteredName(\"\");\n    setNameWasTouched(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${nameInputIsInvalid ? \"form-control invalid\" : \"form-control\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Input is not Valid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"WPbuwyhvxRr5Zefm5qmQ3jPV+BE=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["D:/proiecte/react-udemy/Folder nou/08-forms-deeper-dive/src/components/SimpleInput.js"],"names":["useState","SimpleInput","props","enteredName","setEnteredName","nameWasTouched","setNameWasTouched","enteredEmail","setEnteredEmail","emailWasTouched","setEmailWasTouched","nameIsValid","trim","emailIsValid","nameInputIsInvalid","emailInputIsInvalid","formIsValid","nameInputChangeHandler","e","target","value","nameInputBlurHandler","formSubmit","preventDefault"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACK,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,KAAD,CAAtD;AAEA,QAAMW,WAAW,GAAGR,WAAW,CAACS,IAAZ,OAAuB,EAA3C;AACA,QAAMC,YAAY,GAAGN,YAAY,CAACK,IAAb,OAAwB,EAA7C;AACA,QAAME,kBAAkB,GAAG,CAACH,WAAD,IAAgBN,cAA3C;AACA,QAAMU,mBAAmB,GAAG,CAACF,YAAD,IAAiBJ,eAA7C;AAEA,MAAIO,WAAW,GAAG,KAAlB;;AACA,MAAIL,WAAJ,EAAiB;AACfK,IAAAA,WAAW,GAAG,IAAd;AACD;;AACD,QAAMC,sBAAsB,GAAIC,CAAD,IAAO;AACpCd,IAAAA,cAAc,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD,GAFD;;AAIA,QAAMC,oBAAoB,GAAIH,CAAD,IAAO;AAClCZ,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,GAFD;;AAIA,QAAMgB,UAAU,GAAIJ,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACK,cAAF;AACAjB,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;;AACA,QAAI,CAACK,WAAL,EAAkB;AAChB;AACD;;AACDP,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,GARD;;AASA,sBACE;AAAM,IAAA,QAAQ,EAAEgB,UAAhB;AAAA,4BACE;AACE,MAAA,SAAS,EAAG,GACVR,kBAAkB,GAAG,sBAAH,GAA4B,cAC/C,EAHH;AAAA,8BAKE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,MAFL;AAGE,QAAA,QAAQ,EAAEG,sBAHZ;AAIE,QAAA,MAAM,EAAEI,oBAJV;AAKE,QAAA,KAAK,EAAElB;AALT;AAAA;AAAA;AAAA;AAAA,cANF,EAaGW,kBAAkB,iBAAI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbzB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAQ,QAAA,QAAQ,EAAE,CAACE,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAtDD;;GAAMf,W;;KAAAA,W;AAwDN,eAAeA,WAAf","sourcesContent":["import { useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [nameWasTouched, setNameWasTouched] = useState(false);\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [emailWasTouched, setEmailWasTouched] = useState(false);\n\n  const nameIsValid = enteredName.trim() !== \"\";\n  const emailIsValid = enteredEmail.trim() !== \"\";\n  const nameInputIsInvalid = !nameIsValid && nameWasTouched;\n  const emailInputIsInvalid = !emailIsValid && emailWasTouched;\n\n  let formIsValid = false;\n  if (nameIsValid) {\n    formIsValid = true;\n  }\n  const nameInputChangeHandler = (e) => {\n    setEnteredName(e.target.value);\n  };\n\n  const nameInputBlurHandler = (e) => {\n    setNameWasTouched(true);\n  };\n\n  const formSubmit = (e) => {\n    e.preventDefault();\n    setNameWasTouched(true);\n    if (!nameIsValid) {\n      return;\n    }\n    setEnteredName(\"\");\n    setNameWasTouched(false);\n  };\n  return (\n    <form onSubmit={formSubmit}>\n      <div\n        className={`${\n          nameInputIsInvalid ? \"form-control invalid\" : \"form-control\"\n        }`}\n      >\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {nameInputIsInvalid && <p className=\"error-text\">Input is not Valid</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}