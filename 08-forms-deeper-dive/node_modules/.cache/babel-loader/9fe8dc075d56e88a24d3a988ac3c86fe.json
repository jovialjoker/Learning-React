{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nexport const useInput = validateValue => {\n  _s();\n\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [valueWasTouched, setValueWasTouched] = useState(false);\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && valueWasTouched;\n\n  const valueInputChangeHandler = e => {\n    setEnteredValue(e.target.value);\n  };\n\n  const valueInputBlurHandler = e => {\n    setValueWasTouched(true);\n  };\n\n  return {\n    value: enteredValue,\n    valueIsValid,\n    hasError,\n    valueInputChangeHandler,\n    valueInputBlurHandler\n  };\n};\n\n_s(useInput, \"7y0mLBvkmwU7y1IE6RnrsaEOwqQ=\");","map":{"version":3,"sources":["D:/proiecte/react-udemy/Folder nou/08-forms-deeper-dive/src/hooks/use-input.js"],"names":["React","useState","useInput","validateValue","enteredValue","setEnteredValue","valueWasTouched","setValueWasTouched","valueIsValid","hasError","valueInputChangeHandler","e","target","value","valueInputBlurHandler"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,MAAMC,QAAQ,GAAIC,aAAD,IAAmB;AAAA;;AACzC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACK,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAMO,YAAY,GAAGL,aAAa,CAACC,YAAD,CAAlC;AACA,QAAMK,QAAQ,GAAG,CAACD,YAAD,IAAiBF,eAAlC;;AACA,QAAMI,uBAAuB,GAAIC,CAAD,IAAO;AACrCN,IAAAA,eAAe,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACD,GAFD;;AAGA,QAAMC,qBAAqB,GAAIH,CAAD,IAAO;AACnCJ,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GAFD;;AAGA,SAAO;AACLM,IAAAA,KAAK,EAAET,YADF;AAELI,IAAAA,YAFK;AAGLC,IAAAA,QAHK;AAILC,IAAAA,uBAJK;AAKLI,IAAAA;AALK,GAAP;AAOD,CAlBM;;GAAMZ,Q","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport const useInput = (validateValue) => {\r\n  const [enteredValue, setEnteredValue] = useState(\"\");\r\n  const [valueWasTouched, setValueWasTouched] = useState(false);\r\n  const valueIsValid = validateValue(enteredValue);\r\n  const hasError = !valueIsValid && valueWasTouched;\r\n  const valueInputChangeHandler = (e) => {\r\n    setEnteredValue(e.target.value);\r\n  };\r\n  const valueInputBlurHandler = (e) => {\r\n    setValueWasTouched(true);\r\n  };\r\n  return {\r\n    value: enteredValue,\r\n    valueIsValid,\r\n    hasError,\r\n    valueInputChangeHandler,\r\n    valueInputBlurHandler,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}