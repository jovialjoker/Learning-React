{"ast":null,"code":"var _jsxFileName = \"D:\\\\proiecte\\\\react-udemy\\\\Folder nou\\\\08-forms-deeper-dive\\\\src\\\\components\\\\BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport { useInput } from \"../hooks/useInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = props => {\n  _s();\n\n  const {\n    value: enteredFirstName,\n    isValid: firstNameIsValid,\n    hasErrors: firstNameHasErrors,\n    changeHandler: firstNameChangeHandler,\n    blurHandler: firstNameBlurHandler,\n    reset: firstNameReset\n  } = useInput(value => value.trim() !== \"\");\n  const {\n    value: enteredLastName,\n    isValid: lastNameIsValid,\n    hasErrors: lastNameHasErrors,\n    changeHandler: lastNameChangeHandler,\n    blurHandler: lastNameBlurHandler,\n    reset: lastNameReset\n  } = useInput(value => value.trim() !== \"\");\n  const {\n    value: enteredEmail,\n    isValid: emailIsValid,\n    hasErrors: emailHasErrors,\n    changeHandler: emailChangeHandler,\n    blurHandler: emailBlurHandler,\n    reset: emailReset\n  } = useInput(value => {\n    return value.trim() !== \"\" && value.indexOf(\"@\") !== -1 && value.indexOf(\".\") !== -1;\n  });\n  let formIsValid = false;\n  if (firstNameIsValid && lastNameIsValid && emailIsValid) formIsValid = true;\n  const firstNameStyle = firstNameHasErrors ? \"form-control invalid\" : \"form-control\";\n  const lastNameStyle = lastNameHasErrors ? \"form-control invalid\" : \"form-control\";\n  const emailStyle = emailHasErrors ? \"form-control invalid\" : \"form-control\";\n\n  const submitHandler = e => {\n    e.preventDefault();\n    if (!firstNameIsValid && !lastNameIsValid && !emailIsValid) return;\n    resetFi;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: firstNameStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"firstName\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"firstName\",\n          onChange: firstNameChangeHandler,\n          onBlur: firstNameBlurHandler,\n          value: enteredFirstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), firstNameHasErrors && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"First name is not valid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastNameStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lastName\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"lastName\",\n          onChange: lastNameChangeHandler,\n          onBlur: lastNameBlurHandler,\n          value: enteredLastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), lastNameHasErrors && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Last name is not valid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailChangeHandler,\n        onBlur: emailBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), emailHasErrors && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Email is not valid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"J2PZUbYxkTQIu1AamyxychS3dbg=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["D:/proiecte/react-udemy/Folder nou/08-forms-deeper-dive/src/components/BasicForm.js"],"names":["useInput","BasicForm","props","value","enteredFirstName","isValid","firstNameIsValid","hasErrors","firstNameHasErrors","changeHandler","firstNameChangeHandler","blurHandler","firstNameBlurHandler","reset","firstNameReset","trim","enteredLastName","lastNameIsValid","lastNameHasErrors","lastNameChangeHandler","lastNameBlurHandler","lastNameReset","enteredEmail","emailIsValid","emailHasErrors","emailChangeHandler","emailBlurHandler","emailReset","indexOf","formIsValid","firstNameStyle","lastNameStyle","emailStyle","submitHandler","e","preventDefault","resetFi"],"mappings":"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","sourcesContent":["import { useInput } from \"../hooks/useInput\";\n\nconst BasicForm = (props) => {\n  const {\n    value: enteredFirstName,\n    isValid: firstNameIsValid,\n    hasErrors: firstNameHasErrors,\n    changeHandler: firstNameChangeHandler,\n    blurHandler: firstNameBlurHandler,\n    reset: firstNameReset,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: enteredLastName,\n    isValid: lastNameIsValid,\n    hasErrors: lastNameHasErrors,\n    changeHandler: lastNameChangeHandler,\n    blurHandler: lastNameBlurHandler,\n    reset: lastNameReset,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: enteredEmail,\n    isValid: emailIsValid,\n    hasErrors: emailHasErrors,\n    changeHandler: emailChangeHandler,\n    blurHandler: emailBlurHandler,\n    reset: emailReset,\n  } = useInput((value) => {\n    return (\n      value.trim() !== \"\" &&\n      value.indexOf(\"@\") !== -1 &&\n      value.indexOf(\".\") !== -1\n    );\n  });\n\n  let formIsValid = false;\n  if (firstNameIsValid && lastNameIsValid && emailIsValid) formIsValid = true;\n\n  const firstNameStyle = firstNameHasErrors\n    ? \"form-control invalid\"\n    : \"form-control\";\n  const lastNameStyle = lastNameHasErrors\n    ? \"form-control invalid\"\n    : \"form-control\";\n  const emailStyle = emailHasErrors ? \"form-control invalid\" : \"form-control\";\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (!firstNameIsValid && !lastNameIsValid && !emailIsValid) return;\n    resetFi;\n  };\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"control-group\">\n        <div className={firstNameStyle}>\n          <label htmlFor=\"firstName\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"firstName\"\n            onChange={firstNameChangeHandler}\n            onBlur={firstNameBlurHandler}\n            value={enteredFirstName}\n          />\n          {firstNameHasErrors && <p>First name is not valid</p>}\n        </div>\n        <div className={lastNameStyle}>\n          <label htmlFor=\"lastName\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"lastName\"\n            onChange={lastNameChangeHandler}\n            onBlur={lastNameBlurHandler}\n            value={enteredLastName}\n          />\n          {lastNameHasErrors && <p>Last name is not valid</p>}\n        </div>\n      </div>\n      <div className={emailStyle}>\n        <label htmlFor=\"email\">E-Mail Address</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n          value={enteredEmail}\n        />\n        {emailHasErrors && <p>Email is not valid</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}