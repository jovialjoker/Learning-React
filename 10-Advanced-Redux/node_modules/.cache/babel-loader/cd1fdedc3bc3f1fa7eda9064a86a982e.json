{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    isChanged: false\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n\n    addItem(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.itemId === newItem.id);\n      state.totalQuantity++;\n\n      if (!existingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n\n    removeItem(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.itemId === id);\n      state.totalQuantity--;\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.itemId !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"sources":["D:/proiecte/react-udemy/Folder nou/10-Advanced-Redux/src/store/cart-slice.js"],"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","isChanged","reducers","replaceCart","state","action","payload","addItem","newItem","existingItem","find","item","itemId","id","push","price","quantity","totalPrice","title","removeItem","filter","cartActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC5BE,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,EADK;AAEZC,IAAAA,aAAa,EAAE,CAFH;AAGZC,IAAAA,SAAS,EAAE;AAHC,GAFc;AAO5BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACzBD,MAAAA,KAAK,CAACJ,aAAN,GAAsBK,MAAM,CAACC,OAAP,CAAeN,aAArC;AACAI,MAAAA,KAAK,CAACL,KAAN,GAAcM,MAAM,CAACC,OAAP,CAAeP,KAA7B;AACD,KAJO;;AAKRQ,IAAAA,OAAO,CAACH,KAAD,EAAQC,MAAR,EAAgB;AACrB,YAAMG,OAAO,GAAGH,MAAM,CAACC,OAAvB;AACA,YAAMG,YAAY,GAAGL,KAAK,CAACL,KAAN,CAAYW,IAAZ,CAClBC,IAAD,IAAUA,IAAI,CAACC,MAAL,KAAgBJ,OAAO,CAACK,EADf,CAArB;AAGAT,MAAAA,KAAK,CAACJ,aAAN;;AACA,UAAI,CAACS,YAAL,EAAmB;AACjBL,QAAAA,KAAK,CAACL,KAAN,CAAYe,IAAZ,CAAiB;AACfF,UAAAA,MAAM,EAAEJ,OAAO,CAACK,EADD;AAEfE,UAAAA,KAAK,EAAEP,OAAO,CAACO,KAFA;AAGfC,UAAAA,QAAQ,EAAE,CAHK;AAIfC,UAAAA,UAAU,EAAET,OAAO,CAACO,KAJL;AAKflB,UAAAA,IAAI,EAAEW,OAAO,CAACU;AALC,SAAjB;AAOD,OARD,MAQO;AACLT,QAAAA,YAAY,CAACO,QAAb;AACAP,QAAAA,YAAY,CAACQ,UAAb,GAA0BR,YAAY,CAACQ,UAAb,GAA0BT,OAAO,CAACO,KAA5D;AACD;AACF,KAvBO;;AAwBRI,IAAAA,UAAU,CAACf,KAAD,EAAQC,MAAR,EAAgB;AACxB,YAAMQ,EAAE,GAAGR,MAAM,CAACC,OAAlB;AACA,YAAMG,YAAY,GAAGL,KAAK,CAACL,KAAN,CAAYW,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,MAAL,KAAgBC,EAA3C,CAArB;AACAT,MAAAA,KAAK,CAACJ,aAAN;;AACA,UAAIS,YAAY,CAACO,QAAb,KAA0B,CAA9B,EAAiC;AAC/BZ,QAAAA,KAAK,CAACL,KAAN,GAAcK,KAAK,CAACL,KAAN,CAAYqB,MAAZ,CAAoBT,IAAD,IAAUA,IAAI,CAACC,MAAL,KAAgBC,EAA7C,CAAd;AACD,OAFD,MAEO;AACLJ,QAAAA,YAAY,CAACO,QAAb;AACAP,QAAAA,YAAY,CAACQ,UAAb,GAA0BR,YAAY,CAACQ,UAAb,GAA0BR,YAAY,CAACM,KAAjE;AACD;AACF;;AAlCO;AAPkB,CAAD,CAA7B;AA6CA,OAAO,MAAMM,WAAW,GAAGzB,SAAS,CAAC0B,OAA9B;AACP,eAAe1B,SAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    items: [],\r\n    totalQuantity: 0,\r\n    isChanged: false,\r\n  },\r\n  reducers: {\r\n    replaceCart(state, action) {\r\n      state.totalQuantity = action.payload.totalQuantity;\r\n      state.items = action.payload.items;\r\n    },\r\n    addItem(state, action) {\r\n      const newItem = action.payload;\r\n      const existingItem = state.items.find(\r\n        (item) => item.itemId === newItem.id\r\n      );\r\n      state.totalQuantity++;\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          itemId: newItem.id,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n          name: newItem.title,\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n      }\r\n    },\r\n    removeItem(state, action) {\r\n      const id = action.payload;\r\n      const existingItem = state.items.find((item) => item.itemId === id);\r\n      state.totalQuantity--;\r\n      if (existingItem.quantity === 1) {\r\n        state.items = state.items.filter((item) => item.itemId !== id);\r\n      } else {\r\n        existingItem.quantity--;\r\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice;\r\n"]},"metadata":{},"sourceType":"module"}