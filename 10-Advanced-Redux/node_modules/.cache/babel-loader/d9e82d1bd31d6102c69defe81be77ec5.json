{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItem(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.itemId === newItem.id);\n      state.totalQuantity++;\n\n      if (!existingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n\n    removeItem(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.itemId === id);\n      state.totalQuantity--;\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.itemId !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n\n  }\n});\n\nconst sendCartData = cartData => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: \"pending\",\n      title: \"Sending...\",\n      message: \"Sending cart data!\"\n    }));\n    const res = await fetch(\"https://bd-project-12ea0-default-rtdb.europe-west1.firebasedatabase.app/cart.json\", {\n      method: \"PUT\",\n      body: JSON.stringify(cart)\n    });\n\n    if (!res.ok) {\n      throw new Error(\"Sending cart data failed\");\n    }\n\n    dispatch(uiActions.showNotification({\n      status: \"succes\",\n      title: \"Success...\",\n      message: \"Sent cart data successfully\"\n    }));\n  };\n};\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"sources":["D:/proiecte/react-udemy/Folder nou/10-Advanced-Redux/src/store/cart-slice.js"],"names":["createSlice","uiActions","cartSlice","name","initialState","items","totalQuantity","reducers","addItem","state","action","newItem","payload","existingItem","find","item","itemId","id","push","price","quantity","totalPrice","title","removeItem","filter","sendCartData","cartData","dispatch","showNotification","status","message","res","fetch","method","body","JSON","stringify","cart","ok","Error","cartActions","actions"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { uiActions } from \"./ui-slice\";\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    items: [],\r\n    totalQuantity: 0,\r\n  },\r\n  reducers: {\r\n    addItem(state, action) {\r\n      const newItem = action.payload;\r\n      const existingItem = state.items.find(\r\n        (item) => item.itemId === newItem.id\r\n      );\r\n      state.totalQuantity++;\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          itemId: newItem.id,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n          name: newItem.title,\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n      }\r\n    },\r\n    removeItem(state, action) {\r\n      const id = action.payload;\r\n      const existingItem = state.items.find((item) => item.itemId === id);\r\n      state.totalQuantity--;\r\n      if (existingItem.quantity === 1) {\r\n        state.items = state.items.filter((item) => item.itemId !== id);\r\n      } else {\r\n        existingItem.quantity--;\r\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nconst sendCartData = (cartData) => {\r\n  return async (dispatch) => {\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: \"pending\",\r\n        title: \"Sending...\",\r\n        message: \"Sending cart data!\",\r\n      })\r\n    );\r\n    const res = await fetch(\r\n      \"https://bd-project-12ea0-default-rtdb.europe-west1.firebasedatabase.app/cart.json\",\r\n      {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(cart),\r\n      }\r\n    );\r\n    if (!res.ok) {\r\n      throw new Error(\"Sending cart data failed\");\r\n    }\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: \"succes\",\r\n        title: \"Success...\",\r\n        message: \"Sent cart data successfully\",\r\n      })\r\n    );\r\n  };\r\n};\r\n\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice;\r\n"]},"metadata":{},"sourceType":"module"}